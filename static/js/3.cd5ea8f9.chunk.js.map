{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/ContactItem/ContactItem.module.css","Components/ContactList/ContactList.module.css","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","Components/ContactForm/ContactForm.js","Components/Filter/Filter.js","Components/ContactItem/ContactItem.js","Components/ContactList/ContactList.js","views/ContactsView.js"],"names":["module","exports","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","validate","uuid","REGEX","test","byteToHex","i","push","toString","substr","stringify","arr","offset","arguments","length","undefined","toLowerCase","TypeError","v4","options","buf","rnds","random","ContactForm","useState","name","setName","number","setNumber","contacts","useSelector","contactsSelectors","getContacts","dispatch","useDispatch","handleChangeAllInputs","e","target","value","console","warn","resetForm","className","autoComplete","onSubmit","preventDefault","cont","id","some","alert","contactsOperations","addContact","type","onChange","placeholder","htmlFor","pattern","title","required","Filter","filter","setFilter","changeFilter","ContactItem","styles","contacts__item","contact__name","contact__number","contacts__btn","width","height","xmlns","role","preserveAspectRatio","focusable","fill","x","y","dy","ContactList","getFilter","class","normalizedFilter","contact","includes","getFilteredContacts","map","ContactsView","useEffect","fetchContact"],"mappings":"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","file":"static/js/3.cd5ea8f9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2q78-\",\"form__label\":\"ContactForm_form__label__3JDRl\",\"form__input\":\"ContactForm_form__input__3PYfl\",\"form__btn\":\"ContactForm_form__btn__3VSbB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts__item\":\"ContactItem_contacts__item__3nuPO\",\"contact__name\":\"ContactItem_contact__name__2qE5Z\",\"contact__number\":\"ContactItem_contact__number__3Tmzp\",\"contacts__btn\":\"ContactItem_contacts__btn__2w4OL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts__list\":\"ContactList_contacts__list__2ONmd\"};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { contactsSelectors } from \"../../redux/Phonebook\";\nimport { contactsOperations } from \"../../redux/Phonebook\";\nimport { v4 as uuid } from \"uuid\";\nimport styles from \"./ContactForm.module.css\";\n\nexport default function ContactForm() {\n  const contName = uuid();\n  const contNumber = uuid();\n\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const [active] = useState(false);\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const dispatch = useDispatch();\n\n  const handleChangeAllInputs = (e) => {\n    const { name, value } = e.target;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        console.warn(`Field - ${name} is under constraction`);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const cont = {\n      name: name,\n      number: number,\n      id: uuid(),\n    };\n    if (contacts.some(({ name }) => name === cont.name)) {\n      return alert(`Sorry, contact is already in contacts list`);\n    }\n    dispatch(contactsOperations.addContact(cont));\n    // dispatch(addContact({name, phone}))\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form\n      className=\"p-4 p-md-5 border rounded-3 bg-light\"\n      autoComplete=\"off\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"form-floating mb-3\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          className=\"form-control\"\n          id=\"floatingNameInput\"\n          value={name}\n          onChange={handleChangeAllInputs}\n          placeholder=\"Will Smith\"\n        />\n        <label htmlFor=\"floatingNameInput\">Contact name:</label>\n      </div>\n      <div className=\"form-floating mb-3\">\n        <input\n          type=\"tel\"\n          name=\"number\"\n          className=\"form-control\"\n          id=\"floatingPasswordInput\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleChangeAllInputs}\n          placeholder=\"(097)222-33-22\"\n        />\n        <label htmlFor=\"floatingPasswordInput\">Contact number:</label>\n      </div>\n      <div className=\"checkbox mb-3\"></div>\n      <button className=\"w-100 btn btn-lg btn-primary\" type=\"submit\">\n        Add contact\n      </button>\n      <hr className=\"my-4\" />\n      <small className=\"text-muted\">\n        check the correctness of the entered data*\n      </small>\n    </form>\n    // <form className={styles.form} onSubmit={handleSubmit}>\n    //   <label className={styles.form__label} htmlFor={contName}>\n    //     Contacts name:\n    //   </label>\n    //   <input\n    //     className={styles.form__input}\n    //     type=\"text\"\n    //     id={contName}\n    //     name=\"name\"\n    //     value={name}\n    //     pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n    //     title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n    //     required\n    //     onChange={handleChangeAllInputs}\n    //     placeholder=\"Will Smith\"\n    //   />\n    //   <label className={styles.form__label} htmlFor={contNumber}>\n    //     Contacts number:\n    //   </label>\n    //   <input\n    //     className={styles.form__input}\n    //     type=\"tel\"\n    //     id={contNumber}\n    //     name=\"number\"\n    //     value={number}\n    //     pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n    //     title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n    //     required\n    //     onChange={handleChangeAllInputs}\n    //     placeholder=\"(097) 222-33-222\"\n    //   />\n    //   <button className={styles.form__btn} type=\"submit\" disabled={active}>\n    //     Add contact\n    //   </button>\n    // </form>\n  );\n}\n","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { changeFilter } from \"../../redux/Phonebook/phonebook-actions\";\n// import styles from \"./Filter.module.css\";\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const [filter, setFilter] = useState(\"\");\n\n  const onFilterChange = (e) => {\n    setFilter(e.target.value);\n    dispatch(changeFilter(e.target.value));\n  };\n\n  // const { box, input } = styles;\n  return (\n    // <form className=\"p-4 p-md-5 border rounded-3 bg-light\" autoComplete=\"off\">\n    <div className=\"form-floating mb-3\">\n      <input\n        type=\"text\"\n        name=\"filter\"\n        className=\"form-control\"\n        id=\"floatingFilterInput\"\n        value={filter}\n        onChange={onFilterChange}\n      />\n      <label htmlFor=\"floatingFilterInput\">Find contact by name:</label>\n    </div>\n    // </form>\n\n    // <div className={box}>\n    //   Find contacts by name:\n    //   <input\n    //     className={input}\n    //     type=\"text\"\n    //     name=\"filter\"\n    //     value={filter}\n    //     onChange={onFilterChange}\n    //   />\n    // </div>\n  );\n}\n","import { useDispatch } from \"react-redux\";\nimport { contactsOperations } from \"../../redux/Phonebook\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactItem.module.css\";\n// import { connect } from \"react-redux\";\n\nexport default function ContactItem({ name, number, id }) {\n  const dispatch = useDispatch();\n  const { contacts__item, contact__name, contact__number, contacts__btn } =\n    styles;\n  return (\n    <div className=\"col\">\n      <div className=\"card shadow-sm\">\n        <svg\n          className=\"bd-placeholder-img card-img-top\"\n          width=\"100%\"\n          height=\"225\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          role=\"img\"\n          aria-label=\"Placeholder: Thumbnail\"\n          preserveAspectRatio=\"xMidYMid slice\"\n          focusable=\"false\"\n        >\n          <title>Placeholder</title>\n          <rect width=\"100%\" height=\"100%\" fill=\"#f0f0f0\"></rect>\n          <text x=\"28%\" y=\"50%\" fill=\"#787878\" dy=\".3em\">\n            set photo here\n          </text>\n        </svg>\n\n        <div className=\"card-body\">\n          <p className=\"card-text\">\n            This is a wider card with supporting text below as a natural lead-in\n            to additional content. This content is a little bit longer.\n          </p>\n          <div className=\"d-flex justify-content-between align-items-center\">\n            <div className=\"btn-group\">\n              <button\n                type=\"button\"\n                className=\"btn btn-sm btn-outline-secondary\"\n              >\n                View\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-sm btn-outline-secondary\"\n              >\n                Edit\n              </button>\n            </div>\n            <small className=\"text-muted\">9 mins</small>\n          </div>\n        </div>\n      </div>\n    </div>\n    // <li id={id} className={contacts__item}>\n    //   <p className={contact__name}>{name}</p>\n    //   <p className={contact__number}>tel: {number}</p>\n    //   <button\n    //     onClick={() => dispatch(contactsOperations.deleteContact(id))}\n    //     className={contacts__btn}\n    //   >\n    //     Delete contact\n    //   </button>\n    // </li>\n  );\n}\n\nContactItem.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n  id: PropTypes.string,\n};\n\n// const mapDispatchToProps = (dispatch) => ({\n//   deleteContact: (id) => dispatch(deleteContact(id)),\n// });\n\n// export default connect(null, mapDispatchToProps)(ContactItem);\n","import React from \"react\";\nimport ContactItem from \"../ContactItem\";\nimport styles from \"./ContactList.module.css\";\nimport { useSelector } from \"react-redux\";\nimport { contactsSelectors } from \"../../redux/Phonebook\";\n\nexport default function ContactList() {\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const filter = useSelector(contactsSelectors.getFilter);\n\n  const getFilteredContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  return (\n    <div class=\"row row-cols-1 row-cols-sm-2 row-cols-md-3 g-3\">\n      {getFilteredContacts().map(({ name, number, id }) => (\n        <ContactItem key={id} name={name} number={number} id={id} />\n      ))}\n    </div>\n    // <ul className={styles.contacts__list}>\n    //   {getFilteredContacts().map(({ name, number, id }) => (\n    //     <ContactItem key={id} name={name} number={number} id={id} />\n    //   ))}\n    // </ul>\n  );\n}\n","import { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport ContactForm from \"../Components/ContactForm\";\nimport Filter from \"../Components/Filter\";\nimport ContactList from \"../Components/ContactList\";\nimport { contactsOperations } from \"../redux/Phonebook\";\n\nexport default function ContactsView() {\n  const dispatch = useDispatch();\n  useEffect(() => dispatch(contactsOperations.fetchContact()), [dispatch]);\n  return (\n    <div className=\"container col-xl-10 col-xxl-8 px-4 py-5\">\n      <div className=\"row align-items-start g-lg-5 py-5\">\n        <h1 className=\"display-4 fw-bold lh-1 mb-3\">Phonebook</h1>\n        <div className=\"col-md-10 mx-auto my-3 col-lg-5\">\n          <ContactForm />\n        </div>\n        <div className=\"col-lg-7 text-center text-lg- my-3\">\n          <h2>Contacts</h2>\n          <Filter />\n          <ContactList />\n        </div>\n      </div>\n    </div>\n    // <div className=\"container\">\n    //   <h1>Phonebook</h1>\n    //   <ContactForm />\n    //   <h2>Contacts</h2>\n    //   <Filter />\n    //   <ContactList />\n    // </div>\n  );\n}\n\n{\n  /* <form className=\"p-4 p-md-5 border rounded-3 bg-light\">\n  <div className=\"form-floating mb-3\">\n    <input\n      type=\"email\"\n      className=\"form-control\"\n      id=\"floatingInput\"\n      placeholder=\"name@example.com\"\n    />\n    <label for=\"floatingInput\">Email address</label>\n  </div>\n  <div className=\"form-floating mb-3\">\n    <input\n      type=\"password\"\n      className=\"form-control\"\n      id=\"floatingPassword\"\n      placeholder=\"Password\"\n    />\n    <label for=\"floatingPassword\">Password</label>\n  </div>\n  <div className=\"checkbox mb-3\">\n    <label>\n      <input type=\"checkbox\" value=\"remember-me\" /> Remember me\n    </label>\n  </div>\n  <button className=\"w-100 btn btn-lg btn-primary\" type=\"submit\">\n    Sign up\n  </button>\n  <hr className=\"my-4\" />\n  <small className=\"text-muted\">\n    By clicking Sign up, you agree to the terms of use.\n  </small>\n</form>; */\n}\n"],"sourceRoot":""}
{"version":3,"sources":["Components/ContactItem/ContactItem.module.css","Components/Filter/Filter.module.css","Components/ContactList/ContactList.module.css","redux/Phonebook/phonebook-actions.js","Components/ContactForm/ContactForm.js","Components/Filter/Filter.js","Components/ContactItem/ContactItem.js","redux/Phonebook/selectors.js","Components/ContactList/ContactList.js","App.js","redux/Phonebook/phonebook-reducer.js","redux/store.js","index.js","Components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","deleteContact","changeFilter","ContactForm","onSubmit2","contName","uuid","contNumber","useState","name","setName","number","setNumber","active","dispatch","useDispatch","handleChangeAllInputs","e","target","value","console","warn","resetForm","className","styles","form","onSubmit","preventDefault","cont","id","form__label","htmlFor","form__input","type","pattern","title","required","onChange","placeholder","form__btn","disabled","Filter","filter","setFilter","box","input","ContactItem","contacts__item","contact__name","contact__number","contacts__btn","onClick","getContacts","state","contacts","getFilter","ContactList","useSelector","contacts__list","normalizedFilter","toLowerCase","contact","includes","getFilteredContacts","map","App","contactsList","createReducer","payload","log","some","alert","contactsFilter","_","persistConfig","key","version","storage","blacklist","phoneBookReducer","combineReducers","persistPhoneBookReducer","persistReducer","store","configureStore","reducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,eAAiB,oCAAoC,cAAgB,mCAAmC,gBAAkB,qCAAqC,cAAgB,qC,mBCAjMD,EAAOC,QAAU,CAAC,IAAM,oBAAoB,MAAQ,wB,mBCApDD,EAAOC,QAAU,CAAC,eAAiB,sC,sHCEtBC,EAAaC,YAAa,gBAC1BC,EAAgBD,YAAa,mBAC7BE,EAAeF,YAAa,yB,+BCE1B,SAASG,EAAT,GAAoC,EAAbC,UAAc,IAC5CC,EAAWC,cACXC,EAAaD,cAEnB,EAAwBE,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAiBJ,oBAAS,GAAnBK,EAAP,oBACMC,EAAWC,cAEXC,EAAwB,SAACC,GAC7B,MAAwBA,EAAEC,OAAlBT,EAAR,EAAQA,KAAMU,EAAd,EAAcA,MACd,OAAQV,GACN,IAAK,OACHC,EAAQS,GACR,MACF,IAAK,SACHP,EAAUO,GACV,MACF,QACEC,QAAQC,KAAR,kBAAwBZ,EAAxB,6BAgBAa,EAAY,WAChBZ,EAAQ,IACRE,EAAU,KAGZ,OACE,uBAAMW,UAAWC,IAAOC,KAAMC,SAlBX,SAACT,GACpBA,EAAEU,iBACF,IAAMC,EAAO,CACXnB,KAAMA,EACNE,OAAQA,EACRkB,GAAIvB,eAGNQ,EAASf,EAAW6B,IACpBN,KASA,UACE,uBAAOC,UAAWC,IAAOM,YAAaC,QAAS1B,EAA/C,4BAGA,uBACEkB,UAAWC,IAAOQ,YAClBC,KAAK,OACLJ,GAAIxB,EACJI,KAAK,OACLU,MAAOV,EACPyB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUrB,EACVsB,YAAY,eAEd,uBAAOf,UAAWC,IAAOM,YAAaC,QAASxB,EAA/C,8BAGA,uBACEgB,UAAWC,IAAOQ,YAClBC,KAAK,MACLJ,GAAItB,EACJE,KAAK,SACLU,MAAOR,EACPuB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUrB,EACVsB,YAAY,qBAEd,wBAAQf,UAAWC,IAAOe,UAAWN,KAAK,SAASO,SAAU3B,EAA7D,4B,qBCzES,SAAS4B,IACtB,IAAM3B,EAAWC,cACjB,EAA4BP,mBAAS,IAArC,mBAAOkC,EAAP,KAAeC,EAAf,KAOQC,EAAepB,IAAfoB,IAAKC,EAAUrB,IAAVqB,MACb,OACE,sBAAKtB,UAAWqB,EAAhB,mCAEE,uBACErB,UAAWsB,EACXZ,KAAK,OACLxB,KAAK,SACLU,MAAOuB,EACPL,SAdiB,SAACpB,GACtB0B,EAAU1B,EAAEC,OAAOC,OACnBL,EAASZ,EAAae,EAAEC,OAAOC,c,qBCNpB,SAAS2B,EAAT,GAA4C,IAArBrC,EAAoB,EAApBA,KAAME,EAAc,EAAdA,OAAQkB,EAAM,EAANA,GAC5Cf,EAAWC,cACTgC,EACNvB,IADMuB,eAAgBC,EACtBxB,IADsBwB,cAAeC,EACrCzB,IADqCyB,gBAAiBC,EACtD1B,IADsD0B,cAExD,OACE,qBAAIrB,GAAIA,EAAIN,UAAWwB,EAAvB,UACE,mBAAGxB,UAAWyB,EAAd,SAA8BvC,IAC9B,oBAAGc,UAAW0B,EAAd,kBAAqCtC,KACrC,wBACEwC,QAAS,kBAAMrC,EAASb,EAAc4B,KACtCN,UAAW2B,EAFb,+B,qBCdOE,EAAc,SAACC,GAAD,OAAWA,EAAMC,UAC/BC,EAAY,SAACF,GAAD,OAAWA,EAAMX,QCM3B,SAASc,IACtB,IAAMF,EAAWG,YAAYL,GACvBV,EAASe,YAAYF,GAS3B,OACE,oBAAIhC,UAAWC,IAAOkC,eAAtB,SAR0B,WAC1B,IAAMC,EAAmBjB,EAAOkB,cAChC,OAAON,EAASZ,QAAO,SAACmB,GAAD,OACrBA,EAAQpD,KAAKmD,cAAcE,SAASH,MAMnCI,GAAsBC,KAAI,gBAAGvD,EAAH,EAAGA,KAAME,EAAT,EAASA,OAAQkB,EAAjB,EAAiBA,GAAjB,OACzB,cAACiB,EAAD,CAAsBrC,KAAMA,EAAME,OAAQA,EAAQkB,GAAIA,GAApCA,QChBX,SAASoC,IAKtB,OACE,gCACE,2CACA,cAAC9D,EAAD,IACA,0CACA,cAACsC,EAAD,IACA,cAACe,EAAD,O,oCCbOU,EAAeC,YAAc,IAAD,mBACtCpE,GAAa,SAACsD,EAAD,GAAyB,IAAfe,EAAc,EAAdA,QAEtB,OADAhD,QAAQiD,IAAID,GACRf,EAAMiB,MAAK,qBAAG7D,OAAoB2D,EAAQ3D,SAC5C8D,MAAM,8CACClB,GAEH,GAAN,mBAAWA,GAAX,CAAkBe,OAPmB,cAStCnE,GAAgB,SAACoD,EAAD,OAAUe,EAAV,EAAUA,QAAV,OACff,EAAMX,QAAO,qBAAGb,KAAgBuC,QAVK,IAa5BI,EAAiBL,YAAc,GAAD,eACxCjE,GAAe,SAACuE,EAAD,YAAML,Y,gCCClBM,EAAgB,CACpBC,IAAK,WACLC,QAAS,EACTC,Q,OAAAA,EACAC,UAAW,CAAC,WAGRC,EAAmBC,YAAgB,CACvC1B,SAAUY,EACVxB,OAAQ8B,IAGJS,EAA0BC,YAAeR,EAAeK,GAEjDI,EAAQC,YAAe,CAClCC,QAASJ,EACTK,UAAUC,EACVC,WAAY,SAACC,GAAD,OACVA,EAAqB,CACnBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,QAE3DC,OAAOC,QAGDC,EAAYC,YAAalB,G,oBCjCtCmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUrB,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAaiB,UAAWA,EAAWK,QAAS,KAA5C,SACE,cAAC,IAAD,UACE,cAACxC,EAAD,YAKRyC,SAASC,eAAe,U,kBCnB1B9G,EAAOC,QAAU,CAAC,KAAO,0BAA0B,YAAc,iCAAiC,YAAc,iCAAiC,UAAY,kC","file":"static/js/main.012162a3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts__item\":\"ContactItem_contacts__item__3nuPO\",\"contact__name\":\"ContactItem_contact__name__2qE5Z\",\"contact__number\":\"ContactItem_contact__number__3Tmzp\",\"contacts__btn\":\"ContactItem_contacts__btn__2w4OL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Filter_box__2QTBD\",\"input\":\"Filter_input__3pAq9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts__list\":\"ContactList_contacts__list__2ONmd\"};","// import types from \"./phonebook-types\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\nexport const addContact = createAction(\"contacts/Add\");\nexport const deleteContact = createAction(\"contacts/Delete\");\nexport const changeFilter = createAction(\"contacts/ChangeFilter\");\n\n// export const addContact = (cont) => ({\n//   type: types.ADD,\n//   payload: cont,\n// });\n\n// export const deleteContact = (contactId) => ({\n//   type: types.DELETE,\n//   payload: contactId,\n// });\n// export const changeFilter = (value) => ({\n//   type: types.CHANGE_FILTER,\n//   payload: value,\n// });\n","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addContact } from \"../../redux/Phonebook/phonebook-actions\";\nimport { v4 as uuid } from \"uuid\";\nimport styles from \"./ContactForm.module.css\";\n// import { connect } from \"react-redux\";\n\nexport default function ContactForm({ onSubmit2 }) {\n  const contName = uuid();\n  const contNumber = uuid();\n\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const [active] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleChangeAllInputs = (e) => {\n    const { name, value } = e.target;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        console.warn(`Field - ${name} is under constraction`);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const cont = {\n      name: name,\n      number: number,\n      id: uuid(),\n    };\n    // onSubmit(cont)\n    dispatch(addContact(cont));\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <label className={styles.form__label} htmlFor={contName}>\n        Contacts name:\n      </label>\n      <input\n        className={styles.form__input}\n        type=\"text\"\n        id={contName}\n        name=\"name\"\n        value={name}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        onChange={handleChangeAllInputs}\n        placeholder=\"Will Smith\"\n      />\n      <label className={styles.form__label} htmlFor={contNumber}>\n        Contacts number:\n      </label>\n      <input\n        className={styles.form__input}\n        type=\"tel\"\n        id={contNumber}\n        name=\"number\"\n        value={number}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        required\n        onChange={handleChangeAllInputs}\n        placeholder=\"(097) 222-33-222\"\n      />\n      <button className={styles.form__btn} type=\"submit\" disabled={active}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\n// const mapDispatchToProps = (dispatch) => ({\n//   onSubmit2: (cont) => dispatch(addContact(cont)),\n// });\n// export default connect(null, mapDispatchToProps)(ContactForm);\n","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { changeFilter } from \"../../redux/Phonebook/phonebook-actions\";\nimport styles from \"./Filter.module.css\";\n// import { connect } from \"react-redux\";\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const [filter, setFilter] = useState(\"\");\n\n  const onFilterChange = (e) => {\n    setFilter(e.target.value);\n    dispatch(changeFilter(e.target.value));\n  };\n\n  const { box, input } = styles;\n  return (\n    <div className={box}>\n      Find contacts by name:\n      <input\n        className={input}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onFilterChange}\n      />\n    </div>\n  );\n}\n\n// const mapStateToProps = (state) => ({\n//   filter: state.phonebookContacts.contactsFilter,\n// });\n\n// const mapDispatchToProps = (dispatch) => ({\n//   onChange1: (e) => dispatch(changeFilter(e)),\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import { useDispatch } from \"react-redux\";\nimport { deleteContact } from \"../../redux/Phonebook/phonebook-actions\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactItem.module.css\";\n// import { connect } from \"react-redux\";\n\nexport default function ContactItem({ name, number, id }) {\n  const dispatch = useDispatch();\n  const { contacts__item, contact__name, contact__number, contacts__btn } =\n    styles;\n  return (\n    <li id={id} className={contacts__item}>\n      <p className={contact__name}>{name}</p>\n      <p className={contact__number}>tel: {number}</p>\n      <button\n        onClick={() => dispatch(deleteContact(id))}\n        className={contacts__btn}\n      >\n        Delete contact\n      </button>\n    </li>\n  );\n}\n\nContactItem.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n  id: PropTypes.string,\n};\n\n// const mapDispatchToProps = (dispatch) => ({\n//   deleteContact: (id) => dispatch(deleteContact(id)),\n// });\n\n// export default connect(null, mapDispatchToProps)(ContactItem);\n","export const getContacts = (state) => state.contacts;\nexport const getFilter = (state) => state.filter;\n","import React from \"react\";\nimport ContactItem from \"../ContactItem\";\nimport styles from \"./ContactList.module.css\";\nimport { useSelector } from \"react-redux\";\nimport { getContacts, getFilter } from \"../../redux/Phonebook/selectors\";\n// import { connect } from \"react-redux\";\n\nexport default function ContactList() {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n\n  const getFilteredContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  return (\n    <ul className={styles.contacts__list}>\n      {getFilteredContacts().map(({ name, number, id }) => (\n        <ContactItem key={id} name={name} number={number} id={id} />\n      ))}\n    </ul>\n  );\n}\n\n// const mapStateToProps = (state) => ({\n//   contacts: state.contactsList,\n//   filter: state.contactsFilter,\n// });\n\n// export default connect(mapStateToProps, null)(ContactList);\n","// import { useState, useEffect } from \"react\";\nimport ContactForm from \"./Components/ContactForm\";\nimport Filter from \"./Components/Filter\";\nimport ContactList from \"./Components/ContactList\";\n\nexport default function App() {\n  // useEffect(() => {\n  //   window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  // }, [contacts]);\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\n// const [contacts, setContacts] = useState(\n//   () => JSON.parse(window.localStorage.getItem(\"contacts\")) ?? []\n// );\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport { addContact, deleteContact, changeFilter } from \"./phonebook-actions\";\n\nexport const contactsList = createReducer([], {\n  [addContact]: (state, { payload }) => {\n    console.log(payload);\n    if (state.some(({ name }) => name === payload.name)) {\n      alert(`Sorry, contact is already in contacts list`);\n      return state;\n    }\n    return [...state, payload];\n  },\n  [deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nexport const contactsFilter = createReducer(\"\", {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\n// import { combineReducers } from \"redux\";\n// import types from \"./phonebook-types\";\n\n// const contacts = (state = [], { type, payload }) => {\n//   switch (type) {\n//     case types.ADD:\n//       if (state.some(({ name }) => name === payload.name)) {\n//         alert(`Sorry, contact is already in contacts list`);\n//         return state;\n//       }\n//       return [...state, payload];\n\n//     case types.DELETE:\n//       return state.filter(({ id }) => id !== payload);\n\n//     default:\n//       return state;\n//   }\n// };\n// const filter = (state = \"\", { type, payload }) => {\n//   switch (type) {\n//     case types.CHANGE_FILTER:\n//       return (state = payload.target.value);\n//     default:\n//       return state;\n//   }\n// };\n\n// export default combineReducers({\n//   contacts,\n//   filter,\n// });\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport { contactsFilter, contactsList } from \"./Phonebook/phonebook-reducer\";\nimport logger from \"redux-logger\";\n\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\n\nimport storage from \"redux-persist/lib/storage\";\n\nconst persistConfig = {\n  key: \"products\",\n  version: 1,\n  storage,\n  blacklist: [\"filter\"],\n};\n\nconst phoneBookReducer = combineReducers({\n  contacts: contactsList,\n  filter: contactsFilter,\n});\n\nconst persistPhoneBookReducer = persistReducer(persistConfig, phoneBookReducer);\n\nexport const store = configureStore({\n  reducer: persistPhoneBookReducer,\n  devTools: process.env.NODE_ENV === \"development\",\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }).concat(logger),\n});\n\nexport const persistor = persistStore(store);\n// const rootReducer = combineReducers({\n//   phonebookContacts: contactsReducer,\n// });\n// const store = createStore(rootReducer, composeWithDevTools());\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { store, persistor } from \"./redux/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport \"./index.css\";\nimport \"modern-normalize/modern-normalize.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate persistor={persistor} loading={null}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2q78-\",\"form__label\":\"ContactForm_form__label__3JDRl\",\"form__input\":\"ContactForm_form__input__3PYfl\",\"form__btn\":\"ContactForm_form__btn__3VSbB\"};"],"sourceRoot":""}
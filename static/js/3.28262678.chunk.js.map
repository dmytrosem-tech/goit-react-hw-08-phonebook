{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/Filter/Filter.module.css","Components/ContactItem/ContactItem.module.css","Components/ContactList/ContactList.module.css","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","Components/ContactForm/ContactForm.js","Components/Filter/Filter.js","Components/ContactItem/ContactItem.js","Components/ContactList/ContactList.js","views/ContactsView.js"],"names":["module","exports","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","validate","uuid","REGEX","test","byteToHex","i","push","toString","substr","stringify","arr","offset","arguments","length","undefined","toLowerCase","TypeError","v4","options","buf","rnds","random","ContactForm","contName","contNumber","useState","name","setName","number","setNumber","active","contacts","useSelector","contactsSelectors","getContacts","dispatch","useDispatch","handleChangeAllInputs","e","target","value","console","warn","resetForm","className","styles","form","onSubmit","preventDefault","cont","id","some","alert","contactsOperations","addContact","form__label","htmlFor","form__input","type","pattern","title","required","onChange","placeholder","form__btn","disabled","Filter","filter","setFilter","box","input","changeFilter","ContactItem","contacts__item","contact__name","contact__number","contacts__btn","onClick","deleteContact","ContactList","getFilter","contacts__list","normalizedFilter","contact","includes","getFilteredContacts","map","ContactsView","useEffect","fetchContact"],"mappings":"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","file":"static/js/3.28262678.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2q78-\",\"form__label\":\"ContactForm_form__label__3JDRl\",\"form__input\":\"ContactForm_form__input__3PYfl\",\"form__btn\":\"ContactForm_form__btn__3VSbB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Filter_box__2QTBD\",\"input\":\"Filter_input__3pAq9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts__item\":\"ContactItem_contacts__item__3nuPO\",\"contact__name\":\"ContactItem_contact__name__2qE5Z\",\"contact__number\":\"ContactItem_contact__number__3Tmzp\",\"contacts__btn\":\"ContactItem_contacts__btn__2w4OL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts__list\":\"ContactList_contacts__list__2ONmd\"};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { contactsSelectors } from \"../../redux/Phonebook\";\r\nimport { contactsOperations } from \"../../redux/Phonebook\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nexport default function ContactForm() {\r\n  const contName = uuid();\r\n  const contNumber = uuid();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const [active] = useState(false);\r\n  const contacts = useSelector(contactsSelectors.getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChangeAllInputs = (e) => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        console.warn(`Field - ${name} is under constraction`);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const cont = {\r\n      name: name,\r\n      number: number,\r\n      id: uuid(),\r\n    };\r\n    if (contacts.some(({ name }) => name === cont.name)) {\r\n      return alert(`Sorry, contact is already in contacts list`);\r\n    }\r\n    dispatch(contactsOperations.addContact(cont));\r\n    // dispatch(addContact({name, phone}))\r\n    resetForm();\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className={styles.form} onSubmit={handleSubmit}>\r\n      <label className={styles.form__label} htmlFor={contName}>\r\n        Contacts name:\r\n      </label>\r\n      <input\r\n        className={styles.form__input}\r\n        type=\"text\"\r\n        id={contName}\r\n        name=\"name\"\r\n        value={name}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        onChange={handleChangeAllInputs}\r\n        placeholder=\"Will Smith\"\r\n      />\r\n      <label className={styles.form__label} htmlFor={contNumber}>\r\n        Contacts number:\r\n      </label>\r\n      <input\r\n        className={styles.form__input}\r\n        type=\"tel\"\r\n        id={contNumber}\r\n        name=\"number\"\r\n        value={number}\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n        required\r\n        onChange={handleChangeAllInputs}\r\n        placeholder=\"(097) 222-33-222\"\r\n      />\r\n      <button className={styles.form__btn} type=\"submit\" disabled={active}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { changeFilter } from \"../../redux/Phonebook/phonebook-actions\";\nimport styles from \"./Filter.module.css\";\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const [filter, setFilter] = useState(\"\");\n\n  const onFilterChange = (e) => {\n    setFilter(e.target.value);\n    dispatch(changeFilter(e.target.value));\n  };\n\n  const { box, input } = styles;\n  return (\n    <div className={box}>\n      Find contacts by name:\n      <input\n        className={input}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onFilterChange}\n      />\n    </div>\n  );\n}\n","import { useDispatch } from \"react-redux\";\nimport { contactsOperations } from \"../../redux/Phonebook\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactItem.module.css\";\n// import { connect } from \"react-redux\";\n\nexport default function ContactItem({ name, number, id }) {\n  const dispatch = useDispatch();\n  const { contacts__item, contact__name, contact__number, contacts__btn } =\n    styles;\n  return (\n    <li id={id} className={contacts__item}>\n      <p className={contact__name}>{name}</p>\n      <p className={contact__number}>tel: {number}</p>\n      <button\n        onClick={() => dispatch(contactsOperations.deleteContact(id))}\n        className={contacts__btn}\n      >\n        Delete contact\n      </button>\n    </li>\n  );\n}\n\nContactItem.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n  id: PropTypes.string,\n};\n\n// const mapDispatchToProps = (dispatch) => ({\n//   deleteContact: (id) => dispatch(deleteContact(id)),\n// });\n\n// export default connect(null, mapDispatchToProps)(ContactItem);\n","import React from \"react\";\nimport ContactItem from \"../ContactItem\";\nimport styles from \"./ContactList.module.css\";\nimport { useSelector } from \"react-redux\";\nimport { contactsSelectors } from \"../../redux/Phonebook\";\n\nexport default function ContactList() {\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const filter = useSelector(contactsSelectors.getFilter);\n\n  const getFilteredContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  return (\n    <ul className={styles.contacts__list}>\n      {getFilteredContacts().map(({ name, number, id }) => (\n        <ContactItem key={id} name={name} number={number} id={id} />\n      ))}\n    </ul>\n  );\n}\n","import { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport ContactForm from \"../Components/ContactForm\";\nimport Filter from \"../Components/Filter\";\nimport ContactList from \"../Components/ContactList\";\nimport { contactsOperations } from \"../redux/Phonebook\";\n\nexport default function ContactsView() {\n  const dispatch = useDispatch();\n  useEffect(() => dispatch(contactsOperations.fetchContact()), [dispatch]);\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n"],"sourceRoot":""}